syntax = "proto3";
package acre.acre;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "acre/x/acre/types";

// Msg defines the Msg service.
service Msg {
      rpc InitContract(MsgInitContract) returns (MsgInitContractResponse);
  rpc CreateContract(MsgCreateContract) returns (MsgCreateContractResponse);
  rpc ProceedContract(MsgProceedContract) returns (MsgProceedContractResponse);
  rpc CloseContract(MsgCloseContract) returns (MsgCloseContractResponse);
  rpc CancelContract(MsgCancelContract) returns (MsgCancelContractResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgInitContract {
  string creator = 1;
  string addr = 2;
}

message MsgInitContractResponse {
}

message MsgCreateContract {
  string creator = 1;
  string addr = 2;
  string price1 = 3;
  string price2 = 4;
  string price3 = 5;
}

message MsgCreateContractResponse {
}

message MsgProceedContract {
  string creator = 1;
  string addr = 2;
}

message MsgProceedContractResponse {
}

message MsgCloseContract {
  string creator = 1;
  string addr = 2;
}

message MsgCloseContractResponse {
}

message MsgCancelContract {
  string creator = 1;
  string addr = 2;
}

message MsgCancelContractResponse {
}

// this line is used by starport scaffolding # proto/tx/message
